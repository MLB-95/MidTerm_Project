<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df3' inline='true' name='federated.0n3ulb40p3648b1377er81ikzali' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='textscan.1l9v41b1xarror142rrob0lud6yx'>
            <connection class='textscan' directory='/Users/ericaNNa/Documents/GitHub/MidTerm_Project' filename='df3.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Natural gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='Canada + USA' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df3.csv' datatype='table' name='[__tableau_internal_object_id__].[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]' role='measure' type='quantitative' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df3.csv' id='df3.csv_8FA3405494F0403A91BF165EDD05C9A5'>
            <properties context=''>
              <relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (2)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab C.' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (3)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab C.' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (4)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (5)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (6)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column caption='GDP/per capita' datatype='real' name='[Calculation_965459231175991296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='GDP/[Population]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CGP_CO2_regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>GDP and CO2 emissions by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='Canada + USA' />
              </aliases>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>&quot;Eastern Europe&quot;</bucket>
              <bucket>&quot;Latin America&quot;</bucket>
              <bucket>&quot;Arab contries&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' />
              <lod column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.4640884399414062' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n3ulb40p3648b1377er81ikzali].[sum:GDP:qk]</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</cols>
      </table>
      <simple-id uuid='{98D40816-FE19-4696-9780-76056D50B4D7}' />
    </worksheet>
    <worksheet name='CO2 emissions/Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BDC604FD-1601-4A65-A7D8-4D8AFED423B2}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{771C483D-794C-4748-A151-FE5E4FBAF9D1}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (5)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{E0AC054B-527E-4D56-907F-EC9D0FCA19C4}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[CO2 emissions per region - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (6)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{395FE013-85B6-4B5F-A879-889DA905F256}' />
    </worksheet>
    <worksheet name='CO2_energy-type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>CO2 emissions per energy type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;coal&quot;' value='Coal' />
                <alias key='&quot;natural_gas&quot;' value='Natural gas' />
                <alias key='&quot;nuclear&quot;' value='Nuclear' />
                <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
                <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
              </aliases>
            </column>
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy_type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;all_energy_types&quot;' />
                <groupfilter function='member' level='[none:Energy_type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' direction='DESC' using='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]' />
          <slices>
            <column>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='#000000' />
            <format attr='font-family' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='Tableau Medium' />
            <format attr='font-size' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='-90' />
            <format attr='font-family' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='Tableau Light' />
            <format attr='font-size' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='10' />
            <format attr='color' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</cols>
      </table>
      <simple-id uuid='{5BC50914-CABD-4A5B-8511-D5685DCCE1E5}' />
    </worksheet>
    <worksheet name='CO2_pop_year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Regular'>CO2 emissions and population growth per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]' field-type='quantitative' max='2020' min='1989' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk] + [federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk])</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{9223C426-01DC-4DF5-88BE-088C479E9B44}' />
    </worksheet>
    <worksheet name='CO2_pop_years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>CO2 emissions and populational growth over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk] + [federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk])</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{A36A491C-9BC1-4727-A658-A83123FF8FEF}' />
    </worksheet>
    <worksheet name='Consumption per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Energy consumption per region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (2)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)'>
            <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab C.' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]' included-values='in-range'>
            <min>1993</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{DA2EFB20-3DFE-403F-BDF8-D1EE4B1932E1}' />
    </worksheet>
    <worksheet name='Energy production per energy type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;coal&quot;' value='Coal' />
                <alias key='&quot;natural_gas&quot;' value='Gas' />
                <alias key='&quot;nuclear&quot;' value='Nuclear' />
                <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
                <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy_type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;all_energy_types&quot;' />
                <groupfilter function='member' level='[none:Energy_type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]'>
            <groupfilter from='1992' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='150' />
            <format attr='cell-h' value='50' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' trail-effect='none' />
      </table>
      <simple-id uuid='{D0388EFD-50C5-4051-9BBE-463C412F886E}' />
    </worksheet>
    <worksheet name='GDP/Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>GDP per region - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (6)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>&quot;Eastern Europe&quot;</bucket>
              <bucket>&quot;Latin America&quot;</bucket>
              <bucket>&quot;Arab contries&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:GDP:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{8AF829C4-70E8-41A6-9E07-2BD99932A1CB}' />
    </worksheet>
    <worksheet name='Production per region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{87FDD2D5-E0D3-495D-97E3-4A1904424BE4}' />
    </worksheet>
    <worksheet name='Production per region (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Energy production per region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (4)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]' included-values='in-range'>
            <min>1993</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{80A14FB8-E863-4ED5-9202-0F9031B2C285}' />
    </worksheet>
    <worksheet name='Renewable per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Production of renewable energy by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]'>
            <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;renewables_n_other&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]' field-type='quantitative' max='2020' min='1989' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{39059BFC-E3DD-4076-B053-D09F610C85B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='66000' id='3' name='CO2_energy-type' w='68300' x='6400' y='26000' />
        <zone forceUpdate='true' h='17625' id='5' type-v2='text' w='39700' x='5100' y='3375'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>CO2 is Earthâs most importantÂ greenhouse gas:Â a gas that absorbs and radiates heat. </run>
            <run>Ã&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12375' id='6' type-v2='text' w='40100' x='56700' y='14625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Coal, petroleum and natural gas are energy sources that liberate a lot of CO2 in the atmosphere.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='17625' id='5' type-v2='text' w='39700' x='5100' y='3375'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>CO2 is Earthâs most importantÂ greenhouse gas:Â a gas that absorbs and radiates heat. </run>
                    <run>Ã&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12375' id='6' type-v2='text' w='40100' x='56700' y='14625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Coal, petroleum and natural gas are energy sources that liberate a lot of CO2 in the atmosphere.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66000' id='3' is-fixed='true' name='CO2_energy-type' w='68300' x='6400' y='26000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CF23AD7B-0D6E-4747-AD86-D5018F32C313}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='51500' id='3' name='CO2 emissions/Regions (3)' w='82200' x='900' y='1000' />
        <zone count='1' h='13875' id='5' name='CO2 emissions/Regions (3)' name1='GDP/Region' synchronized='1' type-v2='currpage' w='16000' x='82700' y='9625' />
        <zone h='50625' id='6' name='GDP/Region' w='83600' x='500' y='51000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51500' id='3' is-fixed='true' name='CO2 emissions/Regions (3)' w='82200' x='900' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50625' id='6' is-fixed='true' name='GDP/Region' w='83600' x='500' y='51000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13875' id='5' name='CO2 emissions/Regions (3)' name1='GDP/Region' synchronized='1' type-v2='currpage' w='16000' x='82700' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CFB1F8EF-6185-4114-B336-71D3D23E242A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='62625' id='3' name='CGP_CO2_regions' w='72700' x='3100' y='27250' />
        <zone h='22250' id='4' name='CGP_CO2_regions' pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type-v2='color' w='18300' x='79500' y='42375' />
        <zone forceUpdate='true' h='13750' id='5' type-v2='text' w='45800' x='4100' y='5500'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Gross domestic productÂ (GDP) is a monetary measureÂ of the market value of all the final goodsÂ and services produced and sold in a specific time period by countries. </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='8750' id='6' type-v2='text' w='41200' x='54700' y='16875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>We found out that GDP and CO2 emissions are highly correlated.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='13750' id='5' type-v2='text' w='45800' x='4100' y='5500'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Gross domestic productÂ (GDP) is a monetary measureÂ of the market value of all the final goodsÂ and services produced and sold in a specific time period by countries. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8750' id='6' type-v2='text' w='41200' x='54700' y='16875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>We found out that GDP and CO2 emissions are highly correlated.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62625' id='3' is-fixed='true' name='CGP_CO2_regions' w='72700' x='3100' y='27250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22250' id='4' name='CGP_CO2_regions' pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type-v2='color' w='18300' x='79500' y='42375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B4EE2A80-47CD-4DF0-BEF9-34215D082677}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='92500' id='6' is-centered='0' is-scaled='1' param='/Users/ericaNNa/Downloads/csm_SGL-Headerbild-CO2-Ziele_581c8e752a.png' type-v2='bitmap' w='99000' x='300' y='-375' />
        <zone forceUpdate='true' h='9250' id='3' type-v2='text' w='35000' x='2400' y='7500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='24' underline='true'>About the dataset</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='45500' id='37' type-v2='text' w='32500' x='3000' y='18375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Name:</run>
            <run>Ã&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>       CO2 emissions and more...</run>
            <run>Ã&#10;&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Source:</run>
            <run>Ã&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>       Kaggle</run>
            <run>Ã&#10;&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Features:</run>
            <run>Ã&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>        10</run>
            <run>Ã&#10;&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Rows:</run>
            <run>Ã&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>        55.440</run>
            <run>Ã&#10;&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Period analysed:</run>
            <run>Ã&#10;</run>
            <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>         1990 - 2019</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='61' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='60' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='92500' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/ericaNNa/Downloads/csm_SGL-Headerbild-CO2-Ziele_581c8e752a.png' type-v2='bitmap' w='99000' x='300' y='-375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9250' id='3' type-v2='text' w='35000' x='2400' y='7500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='24' underline='true'>About the dataset</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='45500' id='37' type-v2='text' w='32500' x='3000' y='18375'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Name:</run>
                    <run>Ã&#10;</run>
                    <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>       CO2 emissions and more...</run>
                    <run>Ã&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Source:</run>
                    <run>Ã&#10;</run>
                    <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>       Kaggle</run>
                    <run>Ã&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Features:</run>
                    <run>Ã&#10;</run>
                    <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>        10</run>
                    <run>Ã&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Rows:</run>
                    <run>Ã&#10;</run>
                    <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>        55.440</run>
                    <run>Ã&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>Period analysed:</run>
                    <run>Ã&#10;</run>
                    <run fontcolor='#ffffff' fontname='Tableau Medium' fontsize='14'>         1990 - 2019</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7ED6510A-CC93-4150-B558-7C541E5B31FD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='13000' id='5' type-v2='text' w='51400' x='44400' y='3500'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although production of  renewable energy sources grew in the last decades, we can also see an important growth of CO2 emission sources such as petroleum and coal. </run>
          </formatted-text>
        </zone>
        <zone h='65000' id='20' name='Energy production per energy type' w='69900' x='3200' y='21750' />
        <zone h='18625' id='21' name='Energy production per energy type' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' type-v2='color' w='16800' x='79400' y='53250' />
        <zone h='12750' id='22' name='Energy production per energy type' synchronized='1' type-v2='currpage' w='16000' x='76900' y='23375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='13000' id='5' type-v2='text' w='51400' x='44400' y='3500'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although production of  renewable energy sources grew in the last decades, we can also see an important growth of CO2 emission sources such as petroleum and coal. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65000' id='20' is-fixed='true' name='Energy production per energy type' w='69900' x='3200' y='21750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18625' id='21' name='Energy production per energy type' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' type-v2='color' w='16800' x='79400' y='53250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='22' name='Energy production per energy type' synchronized='1' type-v2='currpage' w='16000' x='76900' y='23375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{848D03CE-B1CD-471C-896C-024EFA2EE6D4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='11000' id='6' type-v2='text' w='45600' x='2700' y='4625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Despite the problems caused by the increasing amount of CO2 in our atmosphere, total CO2 emissions keep growing. </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18250' id='7' type-v2='text' w='44000' x='52700' y='7125'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Asia is the region with the biggest growth in the last three decades.</run>
          </formatted-text>
        </zone>
        <zone h='65000' id='16' name='CO2 emissions/Regions (2)' w='75500' x='2100' y='23375' />
        <zone h='22250' id='17' name='CO2 emissions/Regions (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' type-v2='color' w='14000' x='82300' y='47000' />
        <zone h='12750' id='18' name='CO2 emissions/Regions (2)' synchronized='1' type-v2='currpage' w='16000' x='78700' y='24625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='11000' id='6' type-v2='text' w='45600' x='2700' y='4625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Despite the problems caused by the increasing amount of CO2 in our atmosphere, total CO2 emissions keep growing. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18250' id='7' type-v2='text' w='44000' x='52700' y='7125'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Asia is the region with the biggest growth in the last three decades.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65000' id='16' is-fixed='true' name='CO2 emissions/Regions (2)' w='75500' x='2100' y='23375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22250' id='17' name='CO2 emissions/Regions (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' type-v2='color' w='14000' x='82300' y='47000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='18' name='CO2 emissions/Regions (2)' synchronized='1' type-v2='currpage' w='16000' x='78700' y='24625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{47916491-3B85-4137-B541-F96DAECE9955}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='68000' id='3' name='CO2_pop_years' w='77800' x='900' y='18500' />
        <zone h='6125' id='4' name='CO2_pop_years' pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='82100' y='33750' />
        <zone forceUpdate='true' h='8625' id='5' type-v2='text' w='37800' x='54200' y='4875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>In some years, CO2 emissions grew more than the world&apos;s population.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='8' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='8625' id='5' type-v2='text' w='37800' x='54200' y='4875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>In some years, CO2 emissions grew more than the world&apos;s population.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68000' id='3' is-fixed='true' name='CO2_pop_years' w='77800' x='900' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6125' id='4' name='CO2_pop_years' pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='82100' y='33750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89BDED2A-732D-4B00-A785-473EBBF85ED5}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 7'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='59250' id='3' name='Production per region (2)' w='47200' x='900' y='29625' />
        <zone h='22250' id='4' name='Production per region (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type-v2='color' w='14000' x='82100' y='3000' />
        <zone h='58750' id='5' name='Consumption per region' w='49900' x='49200' y='30375' />
        <zone h='9750' id='6' type-v2='text' w='48700' x='5800' y='6625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Both energy production and energy consumption have grown in the last decades.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9750' id='6' type-v2='text' w='48700' x='5800' y='6625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Both energy production and energy consumption have grown in the last decades.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59250' id='3' is-fixed='true' name='Production per region (2)' w='47200' x='900' y='29625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22250' id='4' name='Production per region (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type-v2='color' w='14000' x='82100' y='3000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58750' id='5' is-fixed='true' name='Consumption per region' w='49900' x='49200' y='30375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{004F40A4-74D8-4F69-957C-4DE2B7DC9B52}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='About the dataset' captured-sheet='Dashboard 3' id='1' />
                  <story-point caption='Introduction' captured-sheet='Dashboard 1' id='2' />
                  <story-point caption='CO2 emissions growth' captured-sheet='Dashboard 5' id='5' />
                  <story-point caption='CO2 x population' captured-sheet='Dashboard 6' id='6' />
                  <story-point caption='GDP and CO2 correlation' captured-sheet='Dashboard 2' id='3'>
                    <capturedDeltas>
                      <dashboard name='Dashboard 2'>
                        <zone id='6'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>GDP and CO2 emissions seem to be highly correlated.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and CO2 correlation (2)' captured-sheet='Dashboard 1 (2)' id='8' />
                  <story-point caption='Growth of production and consumption' captured-sheet='Dashboard 7' id='7'>
                    <capturedDeltas>
                      <worksheet name='Production per region (2)'>
                        <highlight>
                          <color-one-way>
                            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</field>
                          </color-one-way>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Growth of sources' captured-sheet='Dashboard 4' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{91E6DFE3-575E-4BB5-A993-BB57EE66ED49}' />
    </dashboard>
  </dashboards>
  <windows source-height='156'>
    <window class='worksheet' name='CO2_energy-type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C4971A6-298F-44C6-9DC5-7EC8A7F12E1B}' />
    </window>
    <window class='worksheet' name='CGP_CO2_regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3203DA49-BD6F-49F5-B1A9-63AB82A6428F}' />
    </window>
    <window class='worksheet' name='CO2_pop_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]</field>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F785542-8D28-4419-9544-5CE0277B885A}' />
    </window>
    <window class='worksheet' name='Renewable per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DA93AAD-7759-4F63-93C2-F9C281EF765C}' />
    </window>
    <window class='worksheet' name='Production per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6C84FA3-AC65-42CD-9166-833441BE97BE}' />
    </window>
    <window class='worksheet' name='Production per region (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E9ECBFD-9EAF-4BFE-8B4F-6E07A4E6B1AD}' />
    </window>
    <window class='worksheet' name='Energy production per energy type'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card looped='1' type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:qk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{019CF402-288A-45C7-8FF0-4DAD7E1FB435}' />
    </window>
    <window class='worksheet' name='Consumption per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BF78611-6986-49B4-91F0-E29013EAFC2E}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B8F42A9-5AAA-4075-95FD-930D26F6CB50}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80124126-AB25-4788-8B64-C656120DF8EE}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Country'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BE88D83-7562-49EB-8E6C-C0EF2BCB649C}' />
    </window>
    <window class='worksheet' name='CO2_pop_years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76B3DED8-F503-48C1-A998-E122C7A13A2B}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions (3)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66FAB109-AAF2-44B4-86F9-26D46FAB0D6A}' />
    </window>
    <window class='worksheet' name='GDP/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F22FECF-B3BE-4BE4-93BF-D352FE8D1FF7}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CO2_energy-type'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;natural_gas&quot;</value>
                  <value>318321.75999999995</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;petroleum_n_other_liquids&quot;</value>
                  <value>626166.72000000183</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;coal&quot;</value>
                  <value>706282.60000000207</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{83F5B11C-43A9-49C7-83DB-856D3F5ADD07}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='CGP_CO2_regions'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{166F8FC7-6FA5-4B64-807C-DFC984B28891}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='6' />
      <simple-id uuid='{F5F629CB-1D06-495E-84A3-331DE16EC67A}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Energy production per energy type'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D9AF902A-5CE4-4444-A7CD-73E17A72B9E4}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='CO2 emissions/Regions (2)'>
          <current-page>
            <multibucket>
              <bucket>1993</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{38739750-C889-43FF-B614-CC8860E7583F}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='CO2_pop_years'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B84CE779-76A3-4BBF-AF11-F5351ED81504}' />
    </window>
    <window class='dashboard' name='Dashboard 7'>
      <viewpoints>
        <viewpoint name='Consumption per region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Production per region (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A715C6FA-23B2-40B0-A4AF-6D01C924578D}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='CO2 emissions/Regions (3)'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP/Region'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AD75F890-D68D-4B5E-AEED-536DFDF0E6E5}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{7B6DD076-7F41-4945-BDF3-17BFD3ABAACA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='CGP_CO2_regions' width='384'>
      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
      cuVKVqxYwf79+5NWf1ZWFtXV1fT09BAIBBgdHSUlJYXe3l6GhoZwuVw3/T6uX79Obm4uHo+H
      Rx55BMMwqK+vT0rt4XCYSCRCbm4u1dXVjI6OUlhYSHNzM5FIhIGBASoqKmhpacGyLC5evBgf
      5ly+fDmrV69m7969SVv35eXlDA4Okp6eTmZmJm63m+HhYWKxWPxzkpmZSUdHB6Ojo5imiWEY
      ZGdn89xzz3H8+PF4YCfLgQMH2LBhAwD5+fnxz/mlS5coLS2deweBCwsLOX78OLW1taxbt46C
      ggL6+/upqqqiqqqKM2fO3DTL6Ew5duwYtbW1DAwM0N3dzbJly+js7OTYsWMUFxezZMkScnNz
      2bFjBz09PfFfWjQapbKyEr/fT29vL4WFhTNe+8WLF2lsbKSxsZGhoSGWL1/OhQsXOHHiBEuX
      LmXevHl4vV4+/vhjgsEg69evJxKJ4PF4qKysJBQKEYlEyM7OnvHag8Egu3btoqGhgWvXrvHI
      I49QVVXFJ598Qn19Pffffz+lpaX09/dz5MgRsrKyWLlyJcPDw+Tn5zN//nxaW1vJyclJylh0
      ZmYmpaWllJaWEgqFuOuuuygqKmLPnj00NTXx+OOPU1JSQlNTEydOnGDZsmWUlZUxODhIWVkZ
      CxYs4NSpU1RXV8/4XE2maXLo0CHOnDlDR0cHGzZsoKKigiNHjlBXV8d9991HaWkpw8PDHD58
      mPT0dFavXs3IyAh5eXnMnz+f69evk5mZmZQTCPLz8zl79iy1tbUUFhayaNEifD4fe/fuJRAI
      sH79esrKyti7dy+NjY1s2LCBjIwMBgYGqKqqYv78+Zw5c4bKysqkDGNFIhG6u7vjxz39fj+D
      g4PU1NSQkZHBqlWr5uaFYHaZpe+zq94wjC/8fzazU+23qu3zn5HZXP+t2Kn+29Vqp9rh9p9z
      u2xv4IvvZ04GgIiIfLU5dwxAREQmRgEgIuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQEXEo
      BYDIl7Asi/379/ODH/yAH/zgB3R3d9Pd3c0f//Ef8+qrr/L3f//3mKbJ9evX+dM//VO+973v
      8bd/+7dTmr7g9ddfZ9euXV+6TCQS4Yc//GHSpxiQuUEXgol8iWvXrvEnf/InvPbaa/FpoV97
      7TXuvfdennnmGf7Tf/pPPPnkkxQWFhKLxVi+fDm///u/z2uvvUZRURGmaVJTU0NraytPPfUU
      lmXR1NREW1sbVVVVDAwMEA6Heeqpp7h27RopKSlkZmayb98+DMNgw4YNDAwMcPToUQoKCnj0
      0Uc5ceIEa9euZWhoiF27dlFcXMyjjz5Ka2srvb29XLp0iRUrVnDXXXcle/XJLKcegMiXqK2t
      ZcOGDZSUlJCXl4fP56OlpYVNmzbh9Xp59tlnOX36NKtWrWLlypVs376dtLQ08vLygBs3RNm+
      fTtZWVn8xV/8BVeuXOHv/u7vcLlc/PjHP6avr4/XX3+da9eucfDgQc6ePcsvfvELLl26hGma
      dHZ28rOf/QyPx8O1a9eIxWL8y7/8C2NjY/zkJz/B7/fz8ccfs337do4cOcK//uu/4nK5eO21
      15K85sQOFAAiX2L8fgLjDMO4aarlaDSK2+0mHA7zs5/9jPr6ev78z/88fvew2tpaRkdHaWho
      oKOjg0gkwt13383mzZspKyvjlVdeYfHixYTD4fhrrFq1inPnzlFXV0d2djbr1q1j586dhMPh
      +OsODw9jmibPPfccv/3bv82pU6cAeOKJJ3j22WeTevcysQ8FgMiXuOeee9i/fz8NDQ1cuHCB
      0dFRFi9ezHvvvUd3dzdvv/02DzzwAPv27aO/v5/vfve7DA8Px6fuLi4uprS0lO9973v84R/+
      4YQ2zPn5+fz0pz8lNzeXnTt38sADD/Bnf/ZnHDt2jJaWFgDS0tIYGxuju7ub2trapN12UOxt
      zk0HLTKd0tPTWbx4MW+++SZnzpzh/vvv56GHHuLgwYN88MEHbNiwgSeffJKrV69y/fp1Tp06
      xalTp1i1ahXp6elUV1dTX1/Phx9+iNfrjd9TYeHChfT09LBu3Tr6+vpYuHAhlmVRUFBAb28v
      //RP/8TY2Bi/9Vu/xaFDh3jjjTdYvHgxTzzxBH19faxdu5bq6mr+5m/+hlAoxPe///343Psl
      JSXx5xb5MjoILCLiUBoCEhFxKAWAiIhDKQBERBzq/wcEwK6AB8TsmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions/Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Regions' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Regions (2)' width='384'>
      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
      bt7QQHggYct7UBRmFSsrLSthy3OivXIiHfd/AIYf/If/bVmWvF5vCid68LmuK9u22QL7gmKx
      mFzXlS+BwTURv4+JE4lE4rvU78V9/5t7+0HgkWwB4O5Yj4nDekwM1mNijHQ9PnAvsRl+0xhG
      z7Is1mMCsB4Th/WYGCNdj/f9LiAAwNh44LYA7heO46i7u/uun7dtW+FwOIkTJdftP5tt27Jt
      W9LQPsjOzk5FbztwHI1GR/zGPtd1NTAwoP7+/i88q+u6unbt2hdezoMgHA5rYGBAAwMDunXr
      llzXveO/VSQSueO42sPo9nUwODg46t1LsVgsvpyBgYGHcr0RgFG6fPmy/uVf/kW9vb2/9PNd
      XV26cuVKcodKovfffz/+B3Hx4kU1NDSos7NT27Zt0+nTp7Vt2zYFg0FJ0qlTp/T222/HI3G7
      wcFBDQx8/lUdO3fu1Icffqiqqip99tlnX3je4TPNPuz27NmjQ4cOqbq6WrW1tbJtW3v37o1/
      vqqqSoODgymccOwdPHhQlZWVqq6u1qlTp+7pgburq0sNDQ133NbU1KR3331X1dXVqq6u1q1b
      t8Zq5JS57w8C349c11VdXZ3Wrl2ruro6LV++XIODg/roo4/kOI6WLVumtLQ0ZWVlybZtHTly
      RP39/Zo1a5bKyspSPX5C3P4MPxaLSRqK4sKFC1VeXh5/xZbrurpy5YqeeOIJNTU1adasWXcs
      57PPPpNt25o7d278tqtXryoQCOhrX/ta/LaLFy+qvr5eWVlZ+spXvqJLly6pu7tbbW1tWrJk
      iSZPnqyamhq1traqqKhIS5YskW3bOnr0qHp7e9XX1yfHcXTy5Em1tbVp0qRJWrRo0UP5TvM1
      a9YoIyNDkuKnWxlm27YRB1xXrVqlvLy8+McnT57U9evXVVBQoKVLl6qjo0PHjh1TRkaGli1b
      pkOHDqmjo0NXr17VypUrFQgE5DiOysvL9fjjj8eXc+HCBZWVlSkWi6mxsVFTp05VS0uLBgYG
      lJmZqcLCQlVXV8vr9WrVqlXyeDw6deqUOjo6VFBQoOXLlysYDOrw4cNyXVerVq3SuHHjUrGK
      JLEFMCq2bSsYDGrOnDm6evWqJKmmpkbTp0/XqlWrZFmWent7489cZ8+erXXr1unjjz/+pc+C
      HxZz5sxRbW2t3n33XXV2dkqSbt68qYyMDD322GOqq6uL3zcSiaiqqkonT57UyZMntX///vgD
      VXNzs8rKyuIHWS3L0vjx47V27VplZWXpk08+0dmzZ1VcXKw1a9bo2LFjkqSSkhKtW7dOra2t
      amtr06FDh5Sbmxv/OkkqLS3VunXr1NzcrK6uriSvobE3/Ix/165d8fViGtu2VVlZqV27dunI
      kSNyXVeTJk3SunXr1NHRodbWVlVWVqqioiL+JGDBggWaM2eOVq5cecfLUU+dOqVdu3Zp165d
      ikQiOnfunKShJz11dXWKRCLavn27bt26palTp2rv3r1aunSpysvLtW/fPoXDYV29elXr169X
      KBRSfX299u/frwULFmjevHmqqqpK1WqSxBbAqDQ3N+vatWvavXu3mpqa1Nvbq7lz52r//v06
      e/asVq9eHb9vNBrV4cOHlZGRoYGBAUUikYfmdePDzyQdx5HP51NWVpZee+01dXZ26mc/+5le
      euklXbhwQW1tbaqsrFRjY6Oi0aj8fr/8fr+WLVumhoYG2bat2bNnx9dLWlqaQqHQHd+nvr5e
      3d3dCofDKi4uVnp6uiZPnhz/Yx1+dm9Zljo6OjQ4OKjOzs74fwuv16tYLKYTJ4bOusQAAAPA
      SURBVE7E73P793hYeL1ePfXUU0pPT5fH44lvhQ27/fTrDyuv16sVK1ZowoQJ8ng8cl1XtbW1
      cl1X7e3tGhwc1BNPPKH33ntPubm5+upXvyqfzyefz/e519CXl5drwYIFku5+5oLZs2dr+fLl
      8fcyDG95DB9vyc/PV1pamubOnatPP/1UbW1tqqmpkeu6Kd8dxxbACLmuq7Nnz+pb3/qWNm3a
      pM2bN6uurk6BQECvvPKKVqxYccczr4aGBs2YMUPr16/XxIkTUzh5Yo0bN05tbW1yHEdNTU2a
      OHGi2traNDg4qPz8fE2dOlUDAwO6cuWKvvnNb+r555/X8uXL48dFLMtSenq6MjMzlZmZqYyM
      jPgDU1lZmQ4fPqxIJKJIJKL+/n5du3ZNmzZtuuuFgjo7O+Xz+bRx40ZNnTo1/obB3t5e2bat
      aDSqrq4uBQIBbdy4UaWlpclaVUllWZYCgYACgYD8fr98Pp9CoZBu3rwp27bV09MzojcKPYgs
      y5Lf74+vg66uLlmWpY0bN2r69OmSpIkTJ+rVV1/V5MmTVVdXJ5/Pp2AwKMdx7gjmcBSG19nw
      Cx4GBwfjuz7T09NlWZZ8Pp/C4bBCoZD6+/tlWVY8QI7j6Pz585o8ebLy8vK0cuVKbdiwQc88
      80zyV9BtHo6noknkuq6Kioo0fvzQqQKmTZum/v5+dXR06MCBA7JtWxUVFfL5fIrFYiouLtZ7
      772n5uZm5eXlPTTvYq6oqNC+fftk27ZKS0tVUFCg9vZ27dmzR5JUWFioyZMna/r06fFnTvPm
      zVNTU9Mdyxn+g7xddna2Vq9erR07dsh1Xa1evVrFxcV69913NX78eJWWlionJyf+DHfKlCnK
      z89XOBzWjh07lJGRoaysLK1evVoffPCBAoGAioqKlJeXp2AwqB07dsTj87D50pe+pD179siy
      LOXk5OiZZ57RmjVrtGvXLrmuq8cff1xpaWmpHnNMFRYWqqqqSh6PR1lZWXr66adl23b8dyM7
      O1uXLl1Sc3OzJGndunUKBAKqqanR7t27tXbtWgUCAeXk5Ki2tja+m3ft2rWaP3++tm3bppyc
      HD3yyCPy+XwqKSmRNBSeiooK7dq1S5Zlac2aNZKGjhsMDg6qoKBAM2fOVF5eng4cOCDLsjRz
      5kzl5+enZkWJ9wEAwJjp6+vTiRMnUv5M/24IAACMkeHdRcN7DO43BAAADMVBYAAwFAEAAEMR
      AAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAw1P8DZWnAB8y5yIcAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Regions (3)' width='384'>
      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
      bt7QQHggYct7UBRmFSsrLSthy3OivXIiHfd/AIYf/If/bVmWvF5vCid68LmuK9u22QL7gmKx
      mFzXlS+BwTURv4+JE4lE4rvU78V9/5t7+0HgkWwB4O5Yj4nDekwM1mNijHQ9PnAvsRl+0xhG
      z7Is1mMCsB4Th/WYGCNdj/f9LiAAwNh44LYA7heO46i7u/uun7dtW+FwOIkTJdftP5tt27Jt
      W9LQPsjOzk5FbztwHI1GR/zGPtd1NTAwoP7+/i88q+u6unbt2hdezoMgHA5rYGBAAwMDunXr
      llzXveO/VSQSueO42sPo9nUwODg46t1LsVgsvpyBgYGHcr0RgFG6fPmy/uVf/kW9vb2/9PNd
      XV26cuVKcodKovfffz/+B3Hx4kU1NDSos7NT27Zt0+nTp7Vt2zYFg0FJ0qlTp/T222/HI3G7
      wcFBDQx8/lUdO3fu1Icffqiqqip99tlnX3je4TPNPuz27NmjQ4cOqbq6WrW1tbJtW3v37o1/
      vqqqSoODgymccOwdPHhQlZWVqq6u1qlTp+7pgburq0sNDQ133NbU1KR3331X1dXVqq6u1q1b
      t8Zq5JS57w8C349c11VdXZ3Wrl2ruro6LV++XIODg/roo4/kOI6WLVumtLQ0ZWVlybZtHTly
      RP39/Zo1a5bKyspSPX5C3P4MPxaLSRqK4sKFC1VeXh5/xZbrurpy5YqeeOIJNTU1adasWXcs
      57PPPpNt25o7d278tqtXryoQCOhrX/ta/LaLFy+qvr5eWVlZ+spXvqJLly6pu7tbbW1tWrJk
      iSZPnqyamhq1traqqKhIS5YskW3bOnr0qHp7e9XX1yfHcXTy5Em1tbVp0qRJWrRo0UP5TvM1
      a9YoIyNDkuKnWxlm27YRB1xXrVqlvLy8+McnT57U9evXVVBQoKVLl6qjo0PHjh1TRkaGli1b
      pkOHDqmjo0NXr17VypUrFQgE5DiOysvL9fjjj8eXc+HCBZWVlSkWi6mxsVFTp05VS0uLBgYG
      lJmZqcLCQlVXV8vr9WrVqlXyeDw6deqUOjo6VFBQoOXLlysYDOrw4cNyXVerVq3SuHHjUrGK
      JLEFMCq2bSsYDGrOnDm6evWqJKmmpkbTp0/XqlWrZFmWent7489cZ8+erXXr1unjjz/+pc+C
      HxZz5sxRbW2t3n33XXV2dkqSbt68qYyMDD322GOqq6uL3zcSiaiqqkonT57UyZMntX///vgD
      VXNzs8rKyuIHWS3L0vjx47V27VplZWXpk08+0dmzZ1VcXKw1a9bo2LFjkqSSkhKtW7dOra2t
      amtr06FDh5Sbmxv/OkkqLS3VunXr1NzcrK6uriSvobE3/Ix/165d8fViGtu2VVlZqV27dunI
      kSNyXVeTJk3SunXr1NHRodbWVlVWVqqioiL+JGDBggWaM2eOVq5cecfLUU+dOqVdu3Zp165d
      ikQiOnfunKShJz11dXWKRCLavn27bt26palTp2rv3r1aunSpysvLtW/fPoXDYV29elXr169X
      KBRSfX299u/frwULFmjevHmqqqpK1WqSxBbAqDQ3N+vatWvavXu3mpqa1Nvbq7lz52r//v06
      e/asVq9eHb9vNBrV4cOHlZGRoYGBAUUikYfmdePDzyQdx5HP51NWVpZee+01dXZ26mc/+5le
      euklXbhwQW1tbaqsrFRjY6Oi0aj8fr/8fr+WLVumhoYG2bat2bNnx9dLWlqaQqHQHd+nvr5e
      3d3dCofDKi4uVnp6uiZPnhz/Yx1+dm9Zljo6OjQ4OKjOzs74fwuv16tYLKYTJ4bOusQAAAPA
      SURBVE7E73P793hYeL1ePfXUU0pPT5fH44lvhQ27/fTrDyuv16sVK1ZowoQJ8ng8cl1XtbW1
      cl1X7e3tGhwc1BNPPKH33ntPubm5+upXvyqfzyefz/e519CXl5drwYIFku5+5oLZs2dr+fLl
      8fcyDG95DB9vyc/PV1pamubOnatPP/1UbW1tqqmpkeu6Kd8dxxbACLmuq7Nnz+pb3/qWNm3a
      pM2bN6uurk6BQECvvPKKVqxYccczr4aGBs2YMUPr16/XxIkTUzh5Yo0bN05tbW1yHEdNTU2a
      OHGi2traNDg4qPz8fE2dOlUDAwO6cuWKvvnNb+r555/X8uXL48dFLMtSenq6MjMzlZmZqYyM
      jPgDU1lZmQ4fPqxIJKJIJKL+/n5du3ZNmzZtuuuFgjo7O+Xz+bRx40ZNnTo1/obB3t5e2bat
      aDSqrq4uBQIBbdy4UaWlpclaVUllWZYCgYACgYD8fr98Pp9CoZBu3rwp27bV09MzojcKPYgs
      y5Lf74+vg66uLlmWpY0bN2r69OmSpIkTJ+rVV1/V5MmTVVdXJ5/Pp2AwKMdx7gjmcBSG19nw
      Cx4GBwfjuz7T09NlWZZ8Pp/C4bBCoZD6+/tlWVY8QI7j6Pz585o8ebLy8vK0cuVKbdiwQc88
      80zyV9BtHo6noknkuq6Kioo0fvzQqQKmTZum/v5+dXR06MCBA7JtWxUVFfL5fIrFYiouLtZ7
      772n5uZm5eXlPTTvYq6oqNC+fftk27ZKS0tVUFCg9vZ27dmzR5JUWFioyZMna/r06fFnTvPm
      zVNTU9Mdyxn+g7xddna2Vq9erR07dsh1Xa1evVrFxcV69913NX78eJWWlionJyf+DHfKlCnK
      z89XOBzWjh07lJGRoaysLK1evVoffPCBAoGAioqKlJeXp2AwqB07dsTj87D50pe+pD179siy
      LOXk5OiZZ57RmjVrtGvXLrmuq8cff1xpaWmpHnNMFRYWqqqqSh6PR1lZWXr66adl23b8dyM7
      O1uXLl1Sc3OzJGndunUKBAKqqanR7t27tXbtWgUCAeXk5Ki2tja+m3ft2rWaP3++tm3bppyc
      HD3yyCPy+XwqKSmRNBSeiooK7dq1S5Zlac2aNZKGjhsMDg6qoKBAM2fOVF5eng4cOCDLsjRz
      5kzl5+enZkWJ9wEAwJjp6+vTiRMnUv5M/24IAACMkeHdRcN7DO43BAAADMVBYAAwFAEAAEMR
      AAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAw1P8DZWnAB8y5yIcAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='CO2_energy-type' width='384'>
      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
      /j/eRjBd461TNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='CO2_pop_year' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='CO2_pop_years' width='384'>
      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
      RMRTL+JEXBLH4dj2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Consumption per region' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXhTZfo38G+SJmm60gVoSws0oQvdaMu+t8omIyAiKIMog46IC/g6Oo4z
      OiKKzIgCP4YBRkZ/IiKDKOOCKGChlE2KLQVKW6AtLd3omiZds97vH3173oampSB2O/fnurhI
      T895zvOc5jrfnJPkfiRERGCMMSY60q7uAGOMsa7BAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLF
      AcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLF
      AcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLF
      AcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLF
      AcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLFAcAYYyLVrQLAYrHc1vpEBJPJ9Cv1xr6amhpkZGS0
      Wm42m2E2mzu1L/ZYrdZu0Y/uLjMzEzqdrqu7wViX6vQA2L17N4KCguDq6ooHHngAAJCbm4sJ
      EyZAoVDA19cXO3fuBNAUCG+++SYGDBgAFxcXzJ8/H42NjUJbaWlpcHJyuuU+X375ZQQHBwv/
      Xn311Q73t7CwENu2bRN+Pnv2LJYvX95qvWeffRavvfZah9v9pY4fP46DBw+2Wr5p0ybcd999
      ndKHnTt34sqVK52+7d3w9NNPIzU1tcv2z1h30KkBcOHCBSxbtgzvvfce8vPzsWzZMgDAsmXL
      EBYWBp1Oh//93//F8uXLkZubi4aGBqSmpuLo0aMoLCxETk4Ovv76a6G98PBwXL16Vfi5pKQE
      GRkZMBgMNvstLS3F4sWLcfjwYRw+fBgvvfQSAMBkMiEzMxNXrlwBEQEAamtrUVtbC6PRiJKS
      Epw/fx7btm1DaWkpampqhDZramqQmpoqBNLx48fxxBNPAAB0Oh3S09NbvcI0Go3QarWoqKhA
      WloaLBYLysrKcP78eVitVgBNVzWXLl1Cenq60Kebx9bY2IgffvgB33zzDUpLS23G+7vf/Q6f
      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
      1asCwMfHBz4+PjbLhg0bJjwOCAgQHnt4eAAAnJycOqdzjDHWzfSqW0CMIzfI9QAAD2hJREFU
      McY6jgOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOA
      McZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEigOAMcZEqlcF
      QFVVFXbv3o2CggIAwPHjx3Hw4EGkpaXBaDTiq6++wldffYWamhr89NNPAICkpCTU19d3ZbcZ
      Y6xL9Ko5gWUyGUaMGAGz2QwiQl1dHWbMmIEffvgBRISxY8fCzc0NycnJMJlMyM7OhrOzc6t5
      ga1WK4ioVftWq7WzhvKrMJvNt71NTx4zEd3RmO397XuKOx0z6z0cHDp+Wu9VVwDu7u6QSpuG
      ZLVaoVAoADQFQ11dHdzc3KBSqWA0GqHX65GYmIiIiAgAgMVigclkgslk6rL+M8ZYZ+pVVwAt
      NZ/0rVYrDAYD1Go1rl27Bnd3d3h6ekIikWD69On4/vvvMWfOHMhkMshkMgBNYdD8uKXmcOmp
      bueVQbOePGaJRHJHY5ZIJL9CbzrHnY6ZiVOveqbk5OTg+vXrAABnZ2dERkbixx9/xOjRo+Ht
      7Y3Tp0+jvLwcEydORF5eHpydnTFixAhotVp4enp2ce8ZY6xz9aoA0Gg00Gg0NssGDx4sPB43
      bpzwWK1WAwD8/f07pW+MMdbd9Nzre8YYY78IBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBj
      jIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjImUaAKA
      5wRmjDFbvWo+gPZcunSpw3MCM8aYGIjmCuBWcwIzxpjYiCYAfH19ce3aNRQVFcHT0xNubm5Y
      uHAhvv/+exBRV3ePMcY6nWgCQK1Wo7q6GtnZ2YiJiYFarbaZE5gxxsRGNO8BSCSSuzIncMX1
      DOD4F/+3vbuPqbru/zj+PHKh3Og5dAQ5eDN3TIeVLWCyEluUSqG5lmk2W5PUtpBpilozBxaJ
      pcRWLsvMSJHKNFOHXnPDrHmDd8s8psSMBPVwZ9we4AgehHP94Tq7/F0X/q7Scz6H7/f9+I8z
      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
      nuDgYJ555hkZDWhUU1MTBoMBg8GAyWRSHadHMgIQPldaWsrrr79OW1sbX375pW4KYOzYsTQ3
      N9PQ0EBpaSkvvPCC6kjCC/Ly8jhz5gxjxoyhvLycnJwc1ZF6JAUgfG7EiBHMnz8ft9tNe3s7
      s2bN4tNPP/Xrb0p3yul0YrFYsFgsnofAa/32U70qLS0lKyuLb7/9lqamJtVxbkumgITwgf37
      9/Pjjz8C0NbWxtdff83vv/9OeHi44mTibvv1119Zu3YtDQ0NzJs3j2nTpqmO1CO5CkIIH5g8
      eTKZmZmeu3COHj0qH/4a5HQ6uXDhAqtWrWLv3r1+PwKQAhDCB/bs2cOMGTMYPXo0S5cuJTg4
      mBs3bqiOJe6yjIwMWlpaWLx4MYsXL/b7h9/IGoAQPmAymUhMTKSkpISSkhIAFi1apPmzD3pz
      /fp1UlJSaGxsZOjQoTz//POqI92WrAEIIcRdkpqaisPhoLm5mZCQEKxWK7m5uapj9UgKQAgh
      dErWAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQ
      QqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQ
      QqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqekAIQQQqf+BeA9
      G5Q0BS8GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1 (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
      WgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 3' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 4' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 5' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeVxUZfs/8M+wDvuqIvuOLKIgCIggPCoIYpoLSS59FRfSSLNsefVompYZ
      2WJY9pj2tcwlkoTccklEEBITFAwXRBBEkB1ZhFmu3x98mZ8ji+Baz1zvv+Se+9znOotzzTln
      5r4ERERgjDGmcJSedQCMMcaeDU4AjDGmoDgBMMaYguIEwBhjCooTAGOMKShOAIwxpqA4ATDG
      mILiBMAYYwqKEwBjjCkoTgCMMaagOAEwxpiC4gTAGGMKihMAY4wpKE4AjDGmoDgBMMaYguIE
      wBhjCooTAGOMKShOAIwxpqA4ATDGmILiBMAYYwqKEwBjjCkohUkANTU1aG1tferrLS8vBxF1
      aq+qqnom8TxpYrEYt2/flmtrbGzEnTt3HnnsxzUOY6zdIyWA1NRUhIWFISwsDLNmzUJycvLj
      igsA4O3tjf379wMA0tPTcfXq1V4ve3//F198EYmJiY81vt6wsbFBeXl5p/bRo0cjPT39qcfz
      pBUVFcHZ2VmuLT4+Hm+88Uafx7r/GD7sOPeeR89SbGws3n333WcdBmMyj5QAbt26hcLCQsyd
      Oxc2NjZ48cUX8fnnn8v1EYlEDz1+fHw8fHx8AACff/45Tpw4Ifc6EXU7flf9u9PTOH0lFosf
      ermurhT+jqRSKSQSyRNfz+M6hveeR4/qUbZ98eLFmDNnzmOJg7HHgh7B7t27ydfXV+5vAwMD
      EolEVF5eToGBgaStrU2DBw+moqIiEovFNHfuXDI2NiZTU1P68ssviYho8ODBFB4eTkKhkEaO
      HEnl5eVERBQREUGnT5+mVatWkaamJvXv35/s7e0pKyuLMjMzydramrS1tWnKlCl09+5dWRxd
      9Q8NDaXQ0FAyNzcnXV1d2rt3LxFRj+P0FNvgwYMpJSWFhg0bRrt27aI///yT7O3tSVlZmYKC
      gqisrIyIiIRCIY0ZM4aEQiGNGjWKKisriYjI3d2djh8/ThKJhBYsWEA6OjrUv39/OnLkCBER
      /ec//6HRo0eTg4MDaWlpUWxsLLm7u5NQKKQPPviAiIg2bdpEZmZmZGRkRLNnz5aLu76+nqZP
      n07a2tpkbW1NJSUltGnTJrK0tCQtLS0KDg6mmpoaEolEZG9vTw0NDUREtGDBAkpMTKRbt27R
      qFGjSF9fnxwdHenUqVNERLRlyxYyNDQkXV1dWrduHRERNTY20owZM8jIyIjs7OzI0NBQLpZ1
      69aRq6srWVhYkJGREW3ZsoVEIhF5eXnJxj137hz5+PiQRCLp9hiuW7eOPD09aejQoSQUCmn5
      8uW9OoYd51HHcXvxxRdJT0+PLC0t6fLly0RElJSURPb29qShoUErVqyg8+fP09ixY+nnn38m
      W1tbKi4u7nLbT506Ra6urqSlpUWDBg2irKysbo/NmjVr6PPPPycioujoaJo2bRpZWFiQjo4O
      JSQkEBFRfn4+jRw5kvT19SkgIIBef/11YuxJeawJ4M6dOwSArl+/TosXL6aYmBiSSqX09ttv
      05w5cyg3N5f09fWpvr6eKioqKC0tjYja3ySTk5OpurqagoOD6a233iKi//8mWV9fTxERERQX
      F0fl5eXU1tZGbm5utGvXLmpra6ORI0fS9u3bZXF01T80NJRefvllKi4uptdff52mT59ORNTj
      OD3FJhQKyc7Ojj7++GMqLS2loUOHUlxcHN29e5dmzJhB0dHRsn4HDhygqqoq8vf3p5UrV8pt
      W0JCAnl4eFBTUxMdOnSIbG1tiaj9TTM4OJgKCgpo5cqVNHjwYLp48SJt3ryZ3N3diYjI2NiY
      UlNTqampiQ4fPiwX9/Lly2ns2LFUW1tL+fn5VFtbS2lpaXTjxg1qamqiESNG0Ndff01tbW0E
      gOrq6oiIaMKECbR9+3aKj4+nsWPHkkgkovz8fMrPz6ebN2+Svr4+Xbt2jW7dukWGhoZUWFhI
      77//Pvn4+FBJSQmlp6d3mQDGjh1LVVVVlJCQQJqamnTnzh2KjY2lWbNmERHRW2+9RYsWLerx
      GK5bt478/f0pNzeXfvnlFzIxMenVMezY1x3HY8uWLXTz5k0KCAigTZs2UUVFBeno6ND+/fup
      qamJcnJyKCMjg/T19cnZ2Zm2b99OBQUFXW57fn4+nT9/ntra2mjZsmWy86qrY/Pqq6/SihUr
      iIgoNDSUYmJiqKioiJYvX07Tpk0jIiJ/f3+KjY2l+vp6WrNmDUVFRXX6f8fY4/JYHwJ3PNRU
      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
      GAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 6' width='384'>
      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
      /nyKjo6mxx57jMLDw+nRRx8lIqKpU6fSV199RUREr7/+Ot177702bUBENG/ePPr9739P9913
      H3l7e1NLSws9++yzpFQq6c4776SHHnrI5jMmk4kmTZpECxYsoIcffpi8vLyooKCgx3brqW2+
      +OILmj59us16Z2Zm2rRLSEiI0B6LFi2ioKAgWrBgQY/bburUqfTee++R2WymsLAwSktLEz5/
      33332V2v+fPnU2BgIN177700ZswYevjhh23q9Ic//IESEhLoiSeeoICAAPrwww9p69atFBcX
      R0RERqORAgIC6MSJE73uy/fffz/5+/vTt99+S0REra2tdPvtt5Orqyv9+te/pnXr1gltmJGR
      IbRhbW0tlZaWkp+fHz377LO0cOFCuueee2zqOHnyZPr73/9ORETvv/8+TZ06lYxGI91www10
      33330SOPPEKRkZGk0+noo48+oqVLl9JTTz1FUVFR9Nxzz9mtY2/7O7v+2Q0AAQEBtH//fptl
      58+fJ6lUSmazWVi2b98+CgoKEl6fPn2a4uLiaObMmdTQ0GDz+fnz59N7771HBoOBtmzZQhkZ
      GURk2SGrq6uJiCgiIoKOHTtGRETp6en02Wef2QSAd955hxITE2nPnj2k0+mIiOwuI7p0IPvr
      X/9Kd9xxBxERmUwmio6Opt27d9ORI0coJiZGSB8UFEQ//fQTrVy5km677TY6c+aMzbpaNTU1
      UWZmJv3nP/8hNzc3IrIceB544AEiIsrJyREO9CtWrKC1a9cSEVFBQYHdAGD9XEdHB7m5uVFe
      Xh4tWLCANmzYQEREFRUVJJVKSavV0vz584XAvG/fPuHA6UgA0Ol09MMPP9DWrVvJ39+fjh8/
      TkREfn5+lJeX163djh07RqGhoWQwGIiI6L777qO1a9f22G49tY29ALBs2TJ64YUXiIgoKyvL
      JgAolUr6/vvviYh63HbPPfcc3XvvvVRYWEgZGRkUExND7e3tNHfuXPr000/trlfXtvvnP/9J
      t912m/CeyWQiNzc3ys7OJiKizZs30/Tp00mj0ZCnpyfl5ubSwYMHKSIigsxmc6/78qJFi6ij
      o8NmfbuuIxF1a8OAgADKysqiV155hVatWkUGg4EuXLhAMplMaH8iovfee48SExPJbDbTokWL
      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
      4rp0OA4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 7' width='384'>
      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
      Tk2aNEl169ZNPf3008rr9Sq3261CoZBSSqm//OUv6t5771VKKeVyuZTX61VKKWWapgKUaZpK
      KaWaNm2qNm3aFF13x44d1QMPPKBmz56tRo4cqSZPnqwWLVqkevXqpZRSas+ePSo5ObncZZOS
      ktQvv/yilFJq2rRpatKkSUoppXbs2KHq16+vlFLqs88+U82bN1eFhYUqKSlJHT58OBrDww8/
      rKZMmaKUUmr79u2qTp06SimlevXqpSZOnKgsyyrz/T722GNqwoQJSiml9u/fH431//7v/9QT
      TzyhlFJq5syZ6pZbblHz58+Pvq+jHd1eGRkZKiUlRSmlVOfOndXSpUuVUkp9++23qmPHjiXa
      MzU1Va1fvz66rnA4rF5++WV16623qssuu0wNHDgw+l4WL16slFLqtttuUy+++GKZsZ/sviko
      KFC6rqtZs2ap2bNnq7S0NDVv3jz18MMPq/T09Oh7K2vf3H///er2229XS5cuVR06dCgWQ5cu
      XaJxK6XUvHnzVJ8+faI/9+/fX82ZM6fYPnznnXfUNddcE31937591YwZM1Rubq7Ky8tTbrc7
      +vq6deuqXbt2FXtfn376qRo8eLBSSql3331XDR8+vES7X3/99eof//hHhe+/o+PYtWtXdF0b
      NmxQkydPVmPHjlW1atVSy5cvV5s3b1Z169ZVpmmqnj17qgULFqi5c+eqli1bqtmzZ6tZs2Yp
      h8MRjU2cu+yVm35g/PjxtGzZkoyMDFq0aMFdd92FUgrTNHE4HITD4eipL3DCNX+bzUZBQQFe
      r5fLLruM1q1bYxjGSS3bunVrUlNTAbDb7dHyxtH69++PYRg89NBDXHrppSQlJZW6jdzcXBIS
      EqI/X3XVVWiahq7rpb7fYDCIw+E4offqcDgIhUKl/q209rLZbITDYYAS7VuWl156iXnz5vHX
      v/6Vn376iXfffbfMZY8X+4num6K48vLysNvtjBs3jmbNmvH999/Tr18/4uPjgbL3ze23384l
      l1yCYRhcf/31xf7mcDgIBoPFYipqE4i0i81mK/M9LFmyhM8//5z33nuP999/n7lz55a57MnI
      y8sr9jmpqP1XGsuy6NOnDzNmzKBjx46sX78egObNm5OcnMz8+fPZvHkzffv2ZdGiRQSDQbxe
      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
      1113XbHfeTyeUuM99pS6tO0UxTNy5EhGjhwZ/V1ZbQ9w5513Rpdr2LAhzz77bLH1NWjQoNi2
      77nnnlLjEFXT6NGji9WHi8oExzq6dNilS5di14mOLjFWq1YtWkY4ujMdPXo09913H3/+858Z
      MWJEsaHj1atX59ChQ5imGR1enJCQUKxSUFSyLcttt93GkCFDWLhwIZMmTSrzgOpUFJVgi5zt
      cm9ycjJdunShUaNG+Hy+Uyr3Fu0zXddJSEhg69at1K9f/7jl3oq5knECNE3jvvvuY926dbRs
      2ZLVq1fTsGFDNm/ejM1mY9GiRaXeb3Dskf754tgj9zOprLYX57+HHnoo2ukOHz68zOWuueYa
      nn76aZo3b47f7+eXX36JniUc7c477+Sqq67i66+/LpZMEhMTGTVqFC+//DLffvttsdd07NiR
      GjVqMGbMGC699FKCwSDDhw+nS5cupKWlsW/fvmjJdu3ataXGd/vtt9OyZUsaNGiA2+1G13US
      ExP5+OOPmT59+imNcPr000/Jzc3lmWeeiR5INWnShEceeYQZM2ZwySWXFFu+qNxrWRYffvjh
      SZd7j97W0eXem266iW3btpGRkVGsgz+esvbZxIkTGTp0KJ06dWLt2rX079+/2OuOLvfaHjm6
      MH4GaZrGRRddRPfu3enatWv01CQ5OTl6IaM0F154Ic2bNz8bIZ5Vbdq0OWullLLaXpy/NE3D
      4XDgcDiw2WzYbDZatGhB3bp1SUxMpEuXLtFl09PTueyyy6hXrx4rV67EMAxGjx5NvXr1gOKf
      1aZNmzJ27FhatWrF4MGDWbhwIRMnToxuc+XKlUyfPr3YqB6bzca1117Lzp072bZtGz179qRL
      ly706tWLhQsXEgqFeP3116PbOPo77/F46NGjB3Xr1mX58uWsW7eO66+/nuHDh9OqVSv27t1L
      Tk4Oo0ePpnnz5nTt2rXEOi644IJo6bdmzZp06tSJf/7zn3g8HrxeLyNHjuTuu+9G0zSaNm1K
      fHx89NpG48aNqV27Nu3ataN9+/YkJSWxcOFCmjdvzrPPPovT6SzRRnXr1i12cFfWtq644gq8
      Xi9r1qwhOTmZkSNHkpiYWGL/HO3o7XTs2LHUfXbZZZcxePBgunbtSkpKCoWFhVx11VVomkan
      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
      qFIW9NpycHCQs2fPAjAwMMAbb7xBT08PACdPnuTAgQMYYxgcHKS1tZXW1tZoQ6uQnDlzhn37
      9nH58mUA3n33Xdrb24GgsGbfvn1cunQJgGPHjhWtwjKdTvP222/z3nvvAdDX18e+ffuiquzc
      a58/f57W1lbef//9osiS754456Kfr5SrkDjn+PDDDzl48CDpdJp0Os3+/fvp6uoCgsLFkydP
      AhR1jFy+fJk333yTzs5OAD755BMOHTqEc27Cd3b+/Hn2799flHEqVB8L1gAMDAxw8OBBPvjg
      AwD27t3LnXfeyd69e+nt7aWzs5Mbb7yRPXv20N7ezrJly9iwYUPBl27WWs6ePcttt93Gr3/9
      a44cOUIikaCrq4vz58+ze/dutm7dymuvvcaZM2fo6+vD87xI7kLS0dHBunXr6O/v58yZM+zZ
      s4ctW7awe/fuCdc+evQoGzZs4Lrrriu4HNPdk9bWVvbv3w9Q1HvS1dVFPB7nhhtuYP/+/eze
      vZubb76Z/fv3Y61lz549keEp5hg5efIkt956K2+//TaDg4McO3aMa6+9lv3794/7zjo7Ozlw
      4ACbN29mz549BZWh0rnSKfjggw9obW3FOcfIyAj79u3jzJkzAHz00Ue0trZy+vTposkzG2fq
      SievWMzG0XznnXdobW1duAagsbGRhx56KNpUNMYwMjJCPB6nv7+fTCaD53kMDAwwNDTERx99
      xPHjxwu+4aa15q677uL48eOsXLmSrq4uNm7cyJYtWzh16hSJRIL6+noaGxv55JNP2LJlCzff
      fHM0mAvJpk2bqKmp4ezZsyxZsoRFixbR0NBAbW3thGunUikOHTpUlIZf092TO++8k7Vr1wIU
      9Z6sXLmSdevW0drayvr169Fa09zczNq1a7l8+TI7d+6ksbERoKhj5Pbbb6evr4+amho+/fRT
      brnlFlavXk0qlRr3nWmtuf7661m8eHFBrz8fyHUKTp48STqdZtmyZbz11lvs2bOHrVu30tbW
      xvDwMCdOnGDDhg0sX768aPLMxpnKdfKKxWwczWQySV9fHxs2bFi4BuBKPve5z9He3k4ymWT1
      6tWsX7+ekydP4vs+9913Hzt37sTzvGgZXkhefvllmpqauPPOO1FKYYxheHiYeDwebdAYY4jH
      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
    </thumbnail>
    <thumbnail height='192' name='Energy production per energy type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAOMUlEQVR4nO3dyW8baXrH8V8VlyIlkeImkbI2krI227LsdrvtQdKDmZySHswhuSR/QpL/
      Itcgp5wCdO4TBPBxeg5BEARBpiftbkuO7W7JWixSG0ktFPfiUvXmYFszE4v2UCKLpN/fBzDU
      UovSUzC/JEv0IypCCAEiSandHoComxgASY0B0JW9WH2Mr7/+BoVKraXL6aUi6kZ3H4Hbu/rd
      6aPwcmMHf/JnX6CS3sR3+zl4PAE46lnkanYM2g0U6gJ+TeD4NI/Y7HVoZh22YBQrX/0CSvwh
      gnYDgQEbjvIF1GsNjMXmkHm1DsfwKD69vdjR2XkPQFdW10vY2UngOL0H7/gMEmsr+O9v/hc1
      vYTNjU3cvXcPm4k03KKErYzAN2sJ+IY0hEIRLCwuIp9O4NnOIUrHh5hfWsa3//YITzbTKBdL
      HZ+dAdCVTU1Polwowu0fQ8jjRmzuBj69PQ+Pz4/ZhUUMOO24NuLFRjKNhQkVhYoTmk3B7O0l
      7L1cx52lGAzVDzSq+PbxE/zRz/4KNyb88Pl9HZ9dafePQd9+OUVR2vllqZ8Jga3158jV7IhG
      fLB7Q/C6HOf/e2vte0Ti8zg73EFwfAYuCx+Ytz0A0zShKAoDoL7QcmtnmSTSJQe8tgqOchXM
      XZ/G+vomApFJTIQDEEJACMEAqC+0FIBo6Dg8KUCoAyjAQHwiiBera5i9fw+prQ3gTQCKooBP
      MFM/aCmAs5MT1GpVpE7zmBodhl6pYGDAiWKpjLrx+qGPqqp8CER9o/VzALOBXFGHXVSRypYR
      mxpHYnsTwbFpeAc1ngNQX+FJMEmNzwOQ1BgASY0BkNQYAEmNAZDUGABJjQGQ1BgASY0BkNQY
      AEmNAZDUGABJjQGQ1BgASY0BkNRa2ghrVEt4ufkKdeGABh2GzYWpiB/rrw7g9YcwF5vo1JxE
      HdFSAHZtEG4HUK0pcLk1nOXL2EsaWLx7BwcbGzBNE4ZhAOCvRaH+0FIAtUoRLk8I5mEa7kAI
      jXodiqIisb0DYbzeBwbAjTDqGy2tRArTQDabhWvQC5uoo1wz4fMOIZ87w4BnGA6bypVI6ivc
      CSap8adAJDUGQFJjACQ1BkBSYwAkNQZAUmMAJDUGQFJjACQ1BkBSYwAkNQZAUmMAJDUGQFJj
      ACS1lgIQZgNbG+s4zZWgl3JI7KUghMDuzjbK1UanZiTqmJYWYox6FTXDxNraBjS7isCwG/m8
      DndkErnUAW7dXOBCDPWVlnaCbQ4N6cQaVIcGu12FZ2gIe8ksxhY9qByrXIqnvtNSANVSHqWq
      AbvdhQGniY1kBovLs3j59Cn8I2Nciqe+w51gkhp/CkRSYwAkNQZAUmMAJDUGQFJjACQ1BkBS
      YwAktZaeCb6qo2IGP6SeW/ktWzYViCIaiHd7DLKIpQG8OtnEP/36H638li37i9t/yQAkwodA
      JDUGQFJjACQ1BkBSuzCAWq2GNv8raaKedGEAX375Jer1utWzEFmu6Y9BHz16hAcPHmBiYgJO
      pxMAYNTKWN/Yhs3lgSYqKNUVxKbGsLGxDX94AlNjIcsGJ2qHCwOIxWIYGBhAMpmEqqqIRqMA
      ANXhRjw6ia3dI8CowjTtyOweIra0jNTmBsxw4L07wYZpdu5I2sQ0TTQa/A0XsrgwgC+++OLC
      Tzb0AjZ3j3BjfgalYhG1whH2D3NwFEqoG+YHd4Jtau+fc6uqCrvd0ucHqYuaXiPXVn+DR48e
      4TerP5x/zDAFFKOKnd1DNPQislU7bt1dRv3kEFMxPntK/afpTd1ZoYKl27fh8QXPP6YNDuPm
      zeHz9/0jr99GZ2Y7NyFRBzW9B5icGMOL589RKOtWzkNkqaYBJPf2MDMTw14yaeU8RJZqGkDA
      68Xe3gG8voCV8xBZ6sIAki+f4jBbRDabRUWvWj0TkWUuPAmenL0N0/kKP/7xT5BMJqyeicgy
      FwZQL57gV199hWsTU4jOLVk9E5FlLnwI5PSE8PDhQ/z85z+DWclZPRORZZqeBHs1FV/98leA
      5rVyHiJLNQ1Ar+qo6jpOs1kr5yGyVNNngr2+AMbHFRSqfCKMPl4X3gMUssdIHZ2iXNExHY1Z
      PRORZS4MwDQb2HqVwMhIEIntLatnIrLMhQEMByN4cHseKysrGA5FrJ6JyDJNT4JPzs4QjUZR
      LuatnIfIUk0D0JwayuUKnJrLynmILNV89UnV8PlPH2BA+91PEdDLZagODTZFoNYw4dKc0CsV
      OF1u2FS+MB71l6YBGNUz/Ou//AKLy5/i4Z1FAECjWsFBKoXTXAlDDsAQAl6vF9lyHTbFhpsL
      M5YNTtQOTQPQqw0EfB5UypXzj9kcDujlMq7PzSKzt4eJUQ/W1/Yw+9m910vxH3ihbC7FU69p
      HoBeQb1h4Psnv0YkEsZifByVsxOUaiZOT7LwuG3Y3jvBzTsLWH/2FIHwBJfiqe80/Zv+yZ/+
      +TsfGwhEcD/w2x+Ljr15u3znTtsHI7JC0wC+X/0f7J+UEJuZR3z6GlS+8jt9hJo+JnHYVBQL
      BexsrWP1xYaVMxFZpmkAhing0pyoN0zEY1HrJiKyUPNngnNFfPbZfWh2E98/e2blTESWaXoO
      MBuPYmVlBbHrCxgaGm72aUR9rWkAG2trGJu+gWAgAJ93yMqZiCzTNIDRcBBPnq6gOn8DnyzN
      WzlT3xG1MvR//7tuj/Feqj8G7eFfd3uMntM0gKNsCaPhIGpFrkR+kFlHY+2X3Z7ivWzj9wAG
      8I6mJ8HTE9eQ2duFOzDW7FOI+l7TAA4OdmF3ulCplK2ch8hSTQMoFoqw2e198e93iC7rwnOA
      o0wKP/r8p8jXFDSqRatnIrLMhTfvu4kt5E5SSKaOkUjsWDwSkXUuvAcIB/34emUNAHAtvmDp
      QERWujCA8fgNjMdvWD0LkeW4+UHvdfT3/4D6wUG3x2hKm5tF8G//5tKXby0AIbCzvYHRyevI
      Z5I4KVQxE49iZ3MDoWtRhPz8JxMfm8bxMRqpVLfHaMoWCn74k96jpQDMRg1GXUe5ZiKdTsPt
      C+NsP4FQfB7HiW0EfXMQQkAIceFKpBDiSsNaQUDAbHF3WfTBrrMAWj6uviCudlwtBaA6NHgG
      X/+eoKW793GWTmB7J4+ZCRveXt/fXvkvurL3/tUfgOiPUFv25obp43O142opgLpewuFRHnZ9
      H7q9jmy5hqV7S9hce4bgtRgURYGqqk2X4vthrVJRFNhstpYuI/rgycLLHFdfuOJxtRSAwzWI
      5U8+PX9/4s3bm7eXLz0AUTf1/k0XUQcxAJIaAyCpMQCSGgMgqTEAkhoDIKkxAJIaAyCpMQCS
      GgMgqTEAkhoDIKkxAJIaAyCpMQCSWms7wXUd3377GLPLP0J2dx1npSpi0xPYShzA6w9hLjbx
      4S9C1ENa3Al2IToRhmEKGIqGhfgonj/bwc0/vo+DDXlfKFv0wQtrCyEu9QLgosc3uS97XG+1
      FIDRqCGbzcFuK6BRK2P/UEdk3I/EdgLCUKR9oWzRBy+srSjKpV4AXEFv73Ff9rjeavmS/sg0
      VLsK39wcinoDw55B5M+yGPD6Lj0EUbe0FIDN7sTo6Oj5+z7n67fD/kBbhyKySu8/JiHqIAZA
      UmMAJDUGQFJjACQ1BkBSYwAkNQZAUmMAJDUGQFJjACQ1BkBSYwAkNQZAUuv9TQ6iDign/xlm
      7fjy9wDZoxRe/LAOvW5gd2cb5WrvrwUSvVU7e4za6X9ePoDk3h5GRkahZxLAUBDbm5vtnI/I
      Epd8CCQwN7+AzH4SuydVzH0WQ+UkzaX4Hsal+HcuCeAK5wDHqUNkSzVcX5jG5tOn8I+McSm+
      h3Ep/p1LArh0AAom47OYfPPe3bvcCab+1Ps3yUQdxABIagyApMYASGoMgKTGAEhqDICkxgBI
      agyApMYASGoMgKTGAEhqDICkduUAjGoRq6urSB4ctWMeIktdOYDM7iFmlpahF7LtmIfIUlcO
      wOVSkc8XUW/0/rYX0f935QB84zE0smlMx+PtmIfIUlfe5VMUFdPx6wBwvhPcbCXSow1jeeyT
      q37LjgoPRc73mv9QQihQpj/v0ERtErze8nEBgGN+HkrA34GB2sM+PX2p41IHbwKOUShCiLZu
      PZum2TSAfmcYBmw2W7fHaDuZj6vtPwb9GK/4b6l9sNR/GTIfV0cCaEcE3z3+GqvfPUZON2Ca
      JoQQSKUOIYQ4/2OaAqKex1by+Pc+/ts/5vl/t0Mn4z5MbuP58+fIl+sQpvl7x5FMbKNudO7X
      k3T0RksIbL/8Hi9evEC2qL/zd9NJf8hx9ezv8zCFgmHNhsTWSxzu7SA8Hkd6/xWWZrN4lVUR
      GjJQ1WsIBIZRrdjwX/+xgqoygGsRP2JBDTtZFfnSKfR8BW6PBw/uLXf7kN7rtKjj1q1byB0f
      YOXlETT3EGzVLLYyZcxPj7y5svThvatZhW66EBgyUa1W8eTZN3D6RnG0v4+F5U9wbaS75xc9
      e9/n1FwYiy/Ca2sgOruIqclxRMIjcLscmF2Yh2IKhEdDqNVqEKYBx6APC7MxwGzg5DQLQEV0
      5jrCoxGE/J5uH84H2cwGjk9PUSiW4Q+FIcw6yjUDLkcfXul/l+pAvZyD2+VA5vgYcAxCr1Qw
      MxPFUSbT7enafxLcLrquw+VyQZgNpFIZBEbCqORP4XAPQnMNQDGqyJzkEBkNoFoXqOsFVE07
      hpwK8mUdXs8wbA4bjHoDigJomtbtQ3ov02gglU5jZDSCs5MjeAIj0POnMGwahtxOOJwa1D49
      v2pUK0gfZzEaDqOQy8I9MIhSPgf3cACDLmdXZ+vZAIis0LMPgYiswABIagyApMYASGoMgKTG
      AEhqDICkxgBIagyApMYASGr/B3AtaG3o6nL8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='GDP/Region' width='384'>
      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
      mjZtmo4fP66enh4NDg4qOztblmVp5syZmj59uvbv35/uUQHAKGkPgOM4On36tNra2uQ4js6c
      OaOsrCzV1tZq9+7dmjdvnkpKSvTQQw/Jtm0dOHBATz/9tDwej2pqamRZlmpraxUMBlNLPwCA
      e5f2JSCPx6O6urovXF5dXa3q6upbrrdy5cpbrrNgwf+9N/myZcvSNyQAGIgXggGAoQgAABiK
      AACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiK
      AACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiK
      AACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABjK
      m+kBANxf3j61SZ92nsr0GGlRkDVJf/PY/8v0GKOGAAAYVW3XLuvs1U8zPUZaFOeUZHqEUcUS
      EAAYigAAgKEIAAAYinMAADDGXCeh4db/zPQYmQvAli1b5DiOJOnxxx9XTk6Otm3bpmg0qsWL
      F2vevHn6+OOPVV9fr1gspo8++kjPPPNMpsYFgNHjJhXt2prpKTITANd1FYlE9OKLL0qSbNvW
      vn379OCDD2rOnDl66623NHv2bHV0dMh1Xb377rtavnx5JkYFgPtWRgIwODio3t5e/fGPf9TM
      mTM1depU9fb2aunSpfL5fCosLFQkEtHIyIj27dun4uJiVVZWSpIcx0kdObiuq0QicduvlYhG
      074/mRSLx2RHIve8nUQyOQrTjF+RUbiNYtHYKEwyfsVisVG5nZL38ffSjQev98wZH99LGQlA
      Xl6eXnrpJUWjUe3du1e1tbVyXVeWZUmSLMtK3bl3dnaqqqoq9bE/FQgEZNtffS47FgikZR/G
      C7/Pr6ysrHvejtfjGYVpxq/RuI38Af8oTDJ++f2j873kuY+/lyzLGpXbyE3aGoWM3LOMPAso
      Ho+rsLBQU6dO1cMPP6yenh7l5+erq6tLjuNocHBQwWBQubm5euGFF9TY2KjOzs7rA9u2vF6v
      vF7vbe/4AQC3l5EjgGvXrmnnzp3KycnR0NCQNm7cqEQioT/84Q8KBAKaMWOGAoGAsrOzZVmW
      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
      wAHV1tYqPz9fTz31VOoHobKyUsXFxerp6dHBgwdlWZZGRka0cePG1CPEqqoqVVZW6tKlSzp5
      8qRWr16dkdvqm+rs7NTvf/97SfpCTO8XR44cUUdHhyzL0tq1a1VdXa1p06bp0qVLOnHihHw+
      n6qrq1VTUyPXdVVYWKhIJKK1a9fe8j1z6tQpDQ4OyrIsrVmzRlevXpXjOLJtW1euXFEymdSe
      PXv08ssva/r06Xrrrbe0ceNGxWIxffDBB1q1apUKCwv1zDPP6JNPPlFzc7NOnDihDRs2qLe3
      V4cOHUq9E0Em1NXVaWRkRHv27FFXV5fq6urU1NSk+vp6RSIRdXV1SZL6+vq0bt06ua6rDz/8
      MBWA/v5+5eXlae7cudq6dasWLVqkvr4+LVmyRGVlZdq8ebNeeuklAvBNnDlzRm1tbXr//fd1
      6dIlxWIxPf300zpw4IB6e3v1zDPPpK579uxZff7555oyZcqEueO/+R1YHcdJzV1VVaXZs2er
      paVFDQ0Nevzxx9XZ2am3335bvb29On/+vBYtWiTp+ns7JRIJffDBB7f88Obm5qYevdywf/9+
      OY6jSZMmpb5uTk6ObNtOPZf64MGDGhkZUWFhoRKJhLq6ujR79mxZlpXa9kcffVF12fkAAAR7
      SURBVKRgMCjbtu94WWA8KS8v14YNGyRdf4bbpUuXUrfHRF77v9mSJUu0YsUKSdf38YMPPlB+
      fr5s21Y8HlddXZ0OHjyoTZs2qba2VhUVFanr3mzhwoWpwH/Vz1VNTY1mzpypeDyuQCCQ+nNj
      6SkQCMiyLBUXFysUCqmrq0sNDQ1yXTejR4/RaFR/+MMfNGvWLCWTScXj8dSzr/50X30+X2qf
      bl5Sa2xsVEdHh9577z21tLSklkizsrJk27aysrLk8XgIwN1yHEfd3d169dVX5fF4dOzYsdQ6
      7dKlS9XY2KjOzs7U9VtbWzV37ly5rntHJ73Gg/Lycu3cuVOzZs3SpUuXUo/CDh48qKqqKvX3
      9ys7O1vHjh3Tyy+/rIqKCg0PD2vbtm2pANi2LY/Ho2nTpt3ylLjc3Fwlk0kdO3Ys9UPW2dmp
      VatW3XK7/amOjg6tXLlSPT09cl1XU6dO1a5du1RQUKDLly+rqqpKV69e1bPPPquzZ8/e0fry
      eBOJRFLnRAoKClRaWqq9e/fqgQceUHNzsyZPnjxhHkR8lb6+vtQ+TpkyRV1dXVqxYoUaGxsl
      Se3t7aqurlZZWZk+//xzzZgxQ93d3erq6lJhYWHqRZ/Xrl1LbaesrEyu66q9vV3hcDh1Xu7G
      nabX61UikUg9WaCgoCC1jatXr+rw4cNat26dmpubVVVVpaysrDE/p5RIJHT58uXUHbrH49Hs
      2bNT59qCwaDa29vV09OjYPD2r0R2HEft7e36i7/4C3m9Xn366adfOBd3g+e11157bbR35n6W
      SCRUVFSkwsJCWZaloqIiua6rgoICnTlzRjk5OVq4cKFycnKUn5+vGTNm6MKFCwoGg5o/f74m
      TZo07n+IvV6vpk6dqk8//VRZWVmqra2Vz+eTx+PRpUuXFAwGtWLFCtm2renTp8uyLPl8PmVn
      Z9+yf7Ztq7y8/JZtW5al6upq9fT0qLu7W1OnTtUDDzygs2fPqry8XNOmTVNxcbHy8vKUk5Oj
      rKwsFRQUqLKyUufOnVNpaalmzpypiooKBYNBXbx4UdXV1SovL1dFRYXOnTun6dOna9q0acrL
      y8vEzfeNWZalgYEBhUIhBYNBFRcXq7y8XGfOnFF2drZqa2snzPPLv4zP50uduA2FQiotLdWU
      KVN0/vz51P/TwsJCnTt3TiMjI1qxYoX8fr/y8/PV3NysqVOnyuv1yuPxpH5hVCgUUlFRkWbM
      mKHGxkbl5uaqqqpKhYWFys3NVX5+vizL0qxZs3Tu3Dk5jqOVK1cqGo3q5MmTkqQVK1aouLhY
      s2bNUktLiwYHBzVnzpwxfSVvIBBQX1+fQqGQKisr5fV61d7eroULF6q0tDR1lNTZ2anKykoV
      FBQoPz9fOTk5qZ+53NxcFRQUKJlMqqCgQEVFRbIsS4WFhZKkyZMnq6CgQF6vV3l5eSooKOB1
      AADM09/frzNnzqi+vj7To2QUAQAAQ03c40kAwD0hAABgKAIAAIYiAABgKAIAAIYiAABgKAIA
      AIYiAABgKAIAAIb6/1ALYZEjS5HHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Production per region' width='192'>
      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
      084AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Production per region (2)' width='384'>
      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
      3/jGN/iP//gP+vv78Tyv7FaI53mMjo7y1ltv8dhjjzEzM5Nkm2tububcuXPMzc0lZZZKpZic
      nKS5uRkIy25gYKAsGWKFefjwYSYmJnj66ac5f/482WwWIQS1tbVMTk5SU1ODEIJcLkehUMDz
      PKampnjjjTfo7u4ue5l0z/OYnJzk9ddf55vf/CZa66RlE9/zxo0biVdbX1/PzMwMR48e5ZFH
      HuHAgQNl3R/CIY2u6/K73/2O3t5efvSjH3H06NHkOTc1NTE1NYXrugghSKVSGGOYmJjg3Llz
      XLlyhfHxcZ599llqamrKKou5uTneeOMN2tvbaWxsxHVdHMdJZt5OTU3R0tKSyHX58mW6urr4
      7//+bwC++93vLklZDA4O8v777/PEE09w6dKlRIc0NzcnRriUqamppH42NTUxMjKyaBnuGQNw
      K83Nzfzwhz9kfHyc++67j2w2y44dO7h06RJaa1atWoWUkjfffJO6ujr+/M//fFlmYT7yyCPJ
      PZubm2loaOC5555jdHSUpqYmZmZmOHToEE1NTRw8eJCJiQk6OjpYvXr1ksngeR7PP/88o6Oj
      5HI5Ll26RHd3N21tbczOziYvwP33389TTz2FMYYXXnihbANwKw888ADt7e3Mzs7S0tJCfX09
      P/7xjxkeHsZ1XcbGxpIW0/r163nvvfcYGhoqq0U0PDzM22+/zXPPPUdNTQ2jo6NJn8T09DQ1
      NTX4vs/c3BzpdBrf96mrq0uUfj6fJ51Ol/W745Snra2t/OAHP0BKieM4+L6P4zjMzs5SV1eX
      5MMuFos4jsP09DS//OUveeqpp1i1alXZLbLJyUn27dvHM888Q2trK0qpBXk4PM+jpqaG6elp
      mpubmZ2dZXJykuHhYY4ePcq5c+d45513ePzxx8uS44MPPuDGjRs8//zzuK5LOp3+wjOJ4+vx
      PpfL8dBDD9HR0cHx48c5f/48DzzwwKJl8H2fX/ziFzz22GNJ/VJKobVGCIHWmpqaGq5cuQLA
      zZs3yWaz9Pb28pOf/ASlFPv27aOjo6MsvXHmzBl6enp47rnnyGazTE5OJv1OcVncSk1NTaL0
      Y7kWyz3TCTw+Ps7IyAhTU1OMjIxQKBSYmJigpqaGzz//nM7OTiYmJnAch4mJCVpaWigWi5w9
      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
      ZYXy/7ewCGpedwp6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Renewable per region' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Story 1' width='384'>
      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
      EgBCCOGlJACEEMJLSQAIIYSX+tKngfa9Dam6uprExEQWLFiAXq+noqKCxsZGDAYDiYmJ/Z7M
      d+zYMaxWKwaDgUmTJhEaGjqiEzFUGRkZ+Pj4sHTp0mEfd3FxMYWFhYwfP54lS5ZoD3rqezvW
      woULmT17dr9hTpw4QVBQEPHx8Vq37OxsSktLuf7660lJSRn2OoUQXkxdRGdnp1q2bJkKDw9X
      N910k4qPj1dPPfWUUkqpJ554QkVGRqrJkycro9GovvnNbyqr1aqUUmr69Olq4sSJavr06cps
      Nqvf/va3F/uZMfPv//7vI1Lb008/rUJDQ9WqVatUVFSU+sEPfqCUUmrr1q3K399frVy5Uvn7
      +6utW7cqpZQ6deqU+uY3v6l0Op166623tPH86Ec/UomJiWrNmjXKz89P7du3b9hrFUJ4r4sG
      wA9/+EM1b9481dbWppRSyuVyqbKyMqXU2QD4yU9+opRS6vTp02rSpEnqZz/7mVLqbAB89tln
      Simltm/frgICApTb7dbGW1xcrDIzM9Xrr7+uNm7cqFpaWpRSSrndbvWXv/xFPffccyonJ0fr
      /91331W9vb3qk08+USdOnNC6p6enq4qKCnXkyBGVlpamlFKqpKRE/exnP1Mvv/yystlsWr+7
      d+9Wv/3tb9WePXtUVlaWUkqpI0eOqPz8fKWUUt3d3erXv/61+sUvfqFKSkqUUkq1tLSojz/+
      WB0+fFi99NJLaufOnYNq1D/+8Y9am6WlpamEhASllFILFixQv/nNb5RSSv3mN79RCxYsUEop
      9X//7/9VP/7xj9WiRYu0ALBYLMpoNKozZ84opZR69tln1YoVKwb1+0IIMRgXPQfw6aef8sMf
      /pDQ0FCqqqqoqqrS3rBzruTkZJ555hk++uij835ns9n6vRj5o48+4vbbbycnJ4fNmzezYsUK
      PB4PTz31FG+88Qb+/v6sXLmSEydOAPDwww/z/e9/n/Xr11NeXq6NZ8OGDfzbv/0by5cvZ9++
      fZw5c4brrrsOnU7Hjh07+M53vgPAiy++yIMPPsiZM2d47rnnePnllwF46623+OCDD/B4PNx8
      883s2rWLuro6rrnmGsrKyjh16hRf//rX+dGPfsTJkydZs2YN9fX1X7pX9dhjjxEaGorFYuF3
      v/sdCxYswOVycezYMdasWQPAmjVrOHbsGC6Xi3//93/nl7/8Zb83O/W987TveeV33XUXubm5
      X/rbQggxWBc9B9DW1kZCQgIAd999N+Xl5dx66628++67A/odP3689mJsgE2bNpGZmcmHH37I
      3XffPeAFEt/4xjf43e9+R29vL9HR0Zw6dYo///nPFBcXk5CQQH19Pe+99x4/+9nPAGhoaKCi
      ooKAgIB+48nMzOT48eMkJyezYcMGbr/9dp599lmt9tdee42XX36ZLVu2cP311/M///M/HDhw
      oN84cnJyqK2t5cCBA9pLVt58801Wr17NpEmTyMjIAGDnzp00NzcTGxsLQFlZGfv37wfg/vvv
      7zeNeXl5rFu3jtjYWN5//32sVitut1sL0ODgYNxuN1ar9bzPjA8JCeGOO+7g+uuv5/rrryc/
      Px+r1XqxP5cQQlySi+4BxMXFUVRUBMCRI0d4/vnnL9jvsWPHGD9+vPbZZrNhNBr5+c9/zjvv
      vHPB4QICAggKCqKlpQWr1cpdd91FamoqWVlZ/d7W8/vf/37Ayh/ghRde0N7d2tLSwrZt20hN
      TWX16tXMmTOHjo4O2tvb+73f9Yuam5tJTEzU3iKUnJxMc3PzgP6++MaihoYG0tPTSU9P7/dK
      tyNHjrBs2TLWr1/Prl27CA8PJyAgALPZrO1B1NfXYzabzztNfd5//31eeuklli5dyoMPPkhc
      XNwF+xVCiEt10T2AdevW8Ytf/IJrr72W+fPnD3hvpcPhoLW1lb1797Jhwwb+67/+S/tu/fr1
      rFy58oLj9ng8wNmt6u7ububNm0diYiLPPvssd999N729vZw5c+bvhZ7nFW9f7D5jxgwmTJhA
      Wloa/v7+5ObmEhYWxvz583nuuedYv349aWlpA17zN3PmTAoLC6msrCQ+Pp4dO3awbt26izUN
      gLZ1/kU//vGP+f73v8/3vvc9XC4XbrcbHx8fbrjhBv7yl7+wceNG/vKXv3DDDTdc9FV+Z86c
      4Z577sFms7F27VrWrl37pTUJIcSgXewEgcPhUE888YQymUwqICBA+fv7qw0bNiilzp4EBpRe
      r1fJyclq48aNyuPxKKWUmjFjxkVPmL700kvKbDaruLg4NW7cOO3E56effqrCw8NVcnKyioyM
      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
      3GH/BbZyNotKy6L5AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
